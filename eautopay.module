<?php

require_once('eautopay.inc');
//require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');

//todo Добавить хелп к модулю

function eautopay_menu() {

  global $base_url;

  $eautopay_get_link = substr(variable_get('eautopay_link'), drupal_strlen($base_url) + 1);

  $items = array();

  if (variable_get('eautopay_link')) {
    $items[$eautopay_get_link] = array(
      'title' => 'POST data',
      'page callback' => 'eautopay_get_order',
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM,
    );
  }

  $items['user/%user/eautopay'] = array(
    'title' => 'Поля профиля из E-autopay',
    'description' => 'Страница созданная модулем e-autopay для дополнительных данных заказа',
    'page callback' => 'user_profile_eautopay_data',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/system/eautopay'] = array(
    'title' => 'Настройки e-autopay',
    'description' => 'позволяет здать адрес страницы, куда будут приходить уведомления',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('eautopay_get_pay_data_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'eautopay.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function user_profile_eautopay_data($account) {

  $installed_fields = _eautopay_installed_fields();

  //Насильно задать отображение полей
  $display = array(
    'label' => 'inline',
    'view' => 'full',
  );

  foreach ($installed_fields as $c_field_name => $c_field_info) {
    $fields[] = field_view_field('user', $account, $c_field_name, 'full');
  }

  return render($fields);
}

function eautopay_user_view_alter(&$build) {

  $installed_fields = _eautopay_installed_fields();

  foreach ($installed_fields as $c_field_name => $c_field_info) {
    unset($build[$c_field_name]);
  }

}

function eautopay_form_user_profile_form_alter(&$form) {

  $form['eautopay'] = array(
    '#type' => 'fieldset',
    '#title' => t('Eautopay data'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $installed_fields = _eautopay_installed_fields();

  foreach ($installed_fields as $c_field_name => $c_field_info) {
    $form['eautopay'][$c_field_name] = $form[$c_field_name];
    unset($form[$c_field_name]);
  }

}

function eautopay_get_order() {

  drupal_page_is_cacheable(FALSE);

//  if(md5($_POST['id'].$_POST['email'].$_POST['phone'].variable_get('eautopay_secret_key')) == $_POST['hash']){
  if ($_POST) {

    $epay_data = array();

    foreach ($_POST as $k => $v) {
      $epay_data[$k] = check_plain(filter_xss($v));
    }

    file_put_contents('/tmp/e-autopay.txt', serialize($epay_data));

    $epay_role = user_role_load_by_name('e-autopay user');

    $epay_role_rid = $epay_role->rid;

    $new_eautopay_user = new stdClass();
    $new_eautopay_user->name = $epay_data['first_name'] . ' ' . $epay_data['last_name'];
    $new_eautopay_user->pass = user_hash_password(user_password(10));
    $new_eautopay_user->mail = $epay_data['email'];
    $new_eautopay_user->init = $epay_data['email'];
    $new_eautopay_user->status = 1;
    $new_eautopay_user->signature_format = 'filtered_html';

    $new_eautopay_user->roles = array(DRUPAL_AUTHENTICATED_RID => TRUE, $epay_role_rid => TRUE,);

    $new_eautopay_user->field_epay_first_name[LANGUAGE_NONE][0]['value'] = $epay_data['first_name'];
    $new_eautopay_user->field_epay_last_name[LANGUAGE_NONE][0]['value'] = $epay_data['last_name'];
    $new_eautopay_user->field_epay_middle_name[LANGUAGE_NONE][0]['value'] = $epay_data['middle_name'];
    $new_eautopay_user->field_epay_email[LANGUAGE_NONE][0]['value'] = $epay_data['email'];
    $new_eautopay_user->field_epay_phone[LANGUAGE_NONE][0]['value'] = $epay_data['phone'];
    $new_eautopay_user->field_epay_phone2[LANGUAGE_NONE][0]['value'] = $epay_data['phone2'];
    $new_eautopay_user->field_epay_city[LANGUAGE_NONE][0]['value'] = $epay_data['city'];
    $new_eautopay_user->field_epay_country[LANGUAGE_NONE][0]['value'] = $epay_data['country'];
    $new_eautopay_user->field_epay_address[LANGUAGE_NONE][0]['value'] = $epay_data['address'];
    $new_eautopay_user->field_epay_region[LANGUAGE_NONE][0]['value'] = $epay_data['region'];
    $new_eautopay_user->field_epay_postalcode[LANGUAGE_NONE][0]['value'] = $epay_data['postalcode'];

    if ($epay_account = user_load_by_mail($new_eautopay_user->mail) or $epay_account = user_load_by_name($new_eautopay_user->name)) {

      $installed_fields = _eautopay_installed_fields();
      foreach ($installed_fields as $c_field_name => $c_field_info) {
        $epay_account->{$c_field_name}[LANGUAGE_NONE][0]['value'] = $new_eautopay_user->{$c_field_name}[LANGUAGE_NONE][0]['value'];
      }
      $epay_account->roles = $new_eautopay_user->roles;
      $account = user_save($epay_account);

    }
    else {
      $account = user_save($new_eautopay_user);
      _user_mail_notify('register_no_approval_required', $new_eautopay_user);
      //todo создать свой _user_mail_notify
    }

    $order = array(
      'oid' => $epay_data['id'],
      'uid' => $account->uid,
      'order_date' => $epay_data['order_date'],
      'pay_date' => $epay_data['pay_date'],
      'currency' => $epay_data['currency'],
      'product_id' => $epay_data['product_id'],
      'product_name' => $epay_data['product_name'],
      'product_price' => $epay_data['product_price'],
      'product_qty' => $epay_data['product_qty'],
      'comments_client' => $epay_data['comments_client'],
      'comments_author' => $epay_data['comments_author'],
      'ip' => $epay_data['ip'],
      'pay_method' => $epay_data['pay_method'],
    );

    $is_exist_oid = db_select('epay_orders', 'eo')
      ->condition('oid', $epay_data['id'])
      ->fields('eo', array('oid'))
      ->execute()
      ->fetchField();

    if (!empty($is_exist_oid)) {
      exit;
    }
    else {
      drupal_write_record('epay_orders', $order);
    }

    watchdog('epay order', 'You have new order from user <b>%acc_name</b>', array('%acc_name' => $account->name), WATCHDOG_INFO);
  }

  $result = unserialize(file_get_contents('/tmp/e-autopay.txt'));

  debug($result);

  return md5($result['id'] . $result['email'] . $result['phone'] . 'EEjFUjWNYamxAFLt7Ke7XKtgEw9WphN3sKX7dy');
}

function eautopay_user_delete ($account) {
  db_delete('epay_orders')
    ->condition('uid', $account->uid)
    ->execute();
}